{"version":3,"sources":["logo.svg","components/Question/Question.jsx","components/Start/Start.jsx","components/Form/Form.jsx","components/Data/Data.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Question","question","handleNext","output","setoutput","className","text","options","map","item","onClick","id","answer","key","AddToOutput","Start","Data","src","logo_url","alt","Form","classes","makeStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","useStyles","React","useState","activeStep","setActiveStep","steps","prevActiveStep","withStyles","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","StepConnector","color","display","height","alignItems","circle","backgroundColor","zIndex","fontSize","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","props","clsx","String","icon","Row","Col","lg","Stepper","connector","label","Step","StepLabel","StepIconComponent","length","Typography","stepIndex","i","getStepContent","Button","disabled","srcset","step","initialData","organization_name","organization_name_fa","background_url","useEffect","console","log","style","backgroundSize","flexDirection","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cae4b8a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport \"./Question.scss\"\r\nfunction Question({question,handleNext,output,setoutput}) {\r\n    const AddToOutput=(item)=>{\r\n       \r\n        setoutput([...output,{id:question.id,answer:item.key}])\r\n    }\r\n    return (\r\n        <div>\r\n            <p className=\"questionText\"> {question.text}</p>\r\n            \r\n            <div className=\"optionButtonDiv\" >\r\n            {question.options.map(item=>\r\n                <div className=\"optionButton\" onClick={()=>{AddToOutput(item); handleNext()}} >\r\n                    {item.text}\r\n                    \r\n                </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\nimport \"./Start.scss\"\r\nfunction Start({Data,handleNext}) {\r\n    return (\r\n        <div>\r\n            <p className=\"startText\"> فرم نظرسنجی و ارتقای کیفیت</p>\r\n            <div className=\"startImg-div\">\r\n            <img src={Data.logo_url} alt=\"\" className=\"startImg\"/>\r\n            <button className=\"startButton\" onClick={()=>handleNext()}>شروع</button>\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Start\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Question from \"../Question/Question\";\r\nimport \"./Form.scss\";\r\nimport Start from \"../Start/Start\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nfunction Form({ Data, output, setoutput }) {\r\n  function getSteps() {\r\n    return [\"شروع\", ...Data.question.map((item) => item.text)];\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    backButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  function getStepContent(stepIndex) {\r\n    for (let i = 0; i < Data.question.length; i++) {\r\n      if (stepIndex == 0) {\r\n        return <Start Data={Data} handleNext={handleNext} />;\r\n      } else if (stepIndex == i + 1) {\r\n        return (\r\n          <Question\r\n            question={Data.question[i]}\r\n            output={output}\r\n            setoutput={setoutput}\r\n            handleNext={handleNext}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: \"calc(-50% + 16px)\",\r\n      right: \"calc(50% + 16px)\",\r\n    },\r\n    active: {\r\n      \"& $line\": {\r\n        borderColor: \"#784af4\",\r\n      },\r\n    },\r\n    completed: {\r\n      \"& $line\": {\r\n        borderColor: \"#784af4\",\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: \"#eaeaf0\",\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n\r\n  const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: \"#eaeaf0\",\r\n      display: \"flex\",\r\n      height: 22,\r\n      alignItems: \"center\",\r\n    },\r\n    active: {\r\n      color: \"#784af4\",\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: \"50%\",\r\n      backgroundColor: \"currentColor\",\r\n    },\r\n    completed: {\r\n      color: \"#784af4\",\r\n      zIndex: 1,\r\n      fontSize: 18,\r\n    },\r\n  });\r\n\r\n  function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? (\r\n          <Check className={classes.completed} />\r\n        ) : (\r\n          <div className={classes.circle} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\n\r\n  const ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 22,\r\n    },\r\n    active: {\r\n      \"& $line\": {\r\n        backgroundImage:\r\n          \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n      },\r\n    },\r\n    completed: {\r\n      \"& $line\": {\r\n        backgroundImage:\r\n          \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: \"#eaeaf0\",\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n\r\n  const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: \"#ccc\",\r\n      zIndex: 1,\r\n      color: \"#fff\",\r\n      width: 50,\r\n      height: 50,\r\n      display: \"flex\",\r\n      borderRadius: \"50%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    active: {\r\n      backgroundImage:\r\n        \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n      boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n    },\r\n    completed: {\r\n      backgroundImage:\r\n        \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n    },\r\n  });\r\n\r\n  function ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {};\r\n\r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n  };\r\n\r\n  return (\r\n    <Row className=\"formRow\">\r\n      <Col className=\"formCol\" lg=\"2\">\r\n        <div className={classes.root}>\r\n          <Stepper\r\n            className=\"stepper\"\r\n            alternativeLabel\r\n            activeStep={activeStep}\r\n            connector={<ColorlibConnector />}\r\n          >\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <div>\r\n            {activeStep === steps.length ? (\r\n              <div>\r\n                <p className=\"questionText\">\r\n                  {\" \"}\r\n                  از اینکه وقت خود را در اختیار ما گذاشتید سپاس گذاریم\r\n                </p>\r\n                <div className=\"optionButtonDiv\">\r\n                  <button className=\"optionButton\" onClick={handleReset}>\r\n                    {\" \"}\r\n                    دوباره\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Typography className={classes.instructions}>\r\n                  {getStepContent(activeStep)}\r\n                </Typography>\r\n                <div className=\"backButton-div\">\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className=\"backButton\"\r\n                  >\r\n                    قبلی\r\n                  </Button>\r\n                </div>\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      <Col>\r\n      <div className=\"footer\">\r\n                  <img className=\"footerLogo\" src={Data.logo_url} alt=\"\" srcset=\"\"/>\r\n                </div>\r\n      </Col>\r\n    </Row>\r\n    \r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React,{useEffect,useState} from 'react'\r\nimport Form from '../Form/Form'\r\n\r\nfunction Data({step}) {\r\n    const [output,setoutput]=useState([])\r\n   \r\n    let initialData={\r\n        organization_name:\"\",\r\n        organization_name_fa:\"\",\r\n        logo_url:\"https://1000logos.net/wp-content/uploads/2018/08/Huawei-Logo-768x432.png\",\r\n        question:[\r\n        {\r\n            id:\"modate ersal\",\r\n            text:\"از مدت زمان ارسال کالا راضی بودید؟\",\r\n            options:[\r\n                {key:1,text:\"بله\"},\r\n                {key:2,text:\"تا حدودی\"},\r\n                {key:3,text:\"خیر\"}\r\n\r\n            ],\r\n        },\r\n        {\r\n            id:\"barkhorde peyk\",\r\n            text:\"برخورد پیک با شما چطور بود؟\",\r\n            options:[\r\n                {key:1,text:\"عالی\"},\r\n                {key:2,text:\"خوب\"},\r\n                {key:3,text:\"نه چندان خوب\"},\r\n                {key:4,text:\"بد\"}\r\n            ],\r\n        },\r\n        {\r\n            id:\"maske peyk\",\r\n            text:\"آیا پیک از ماسک استفاده کرده بود؟\",\r\n            options:[\r\n                {key:1,text:\"بله\"},\r\n                {key:2,text:\"خیر\"},\r\n\r\n            ],\r\n        },\r\n        {\r\n            id:\"operator\",\r\n            text:\"کیفیت پاسخگویی اپراتور ها چه قدر بود؟\",\r\n            options:[\r\n                {key:1,text:\" راضی ام\"},\r\n                {key:2,text:\"بد نیست\"},\r\n                {key:3,text:\"بد\"},\r\n            ],\r\n        },\r\n    ],\r\n    background_url:\"https://images.unsplash.com/photo-1444080748397-f442aa95c3e5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1190&q=80\"\r\n    };\r\n\r\n\r\nuseEffect(() => {\r\nconsole.log(output)\r\n}, [output])\r\n\r\n    return (\r\n            <div       style={{\r\n                backgroundImage: `url(${initialData.background_url})`,\r\n                backgroundSize:'cover',\r\n                height:'100vh',\r\n                display:'flex',\r\n                flexDirection:'column',\r\n                justifyContent:\"space-around\"\r\n              }}>\r\n\r\n              \r\n            <Form Data={initialData} output={output} setoutput={setoutput}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Data\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Data from \"./components/Data/Data\";\r\nimport Form from \"./components/Form/Form\";\r\nimport \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport { Container,Row,Col } from \"reactstrap\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container className=\"mycontainer\"\r\n    >\r\n\r\n          <Data />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}